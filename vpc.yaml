AWSTemplateFormatVersion: 2010-09-09
Description: Multi AZ ec2 cloudformation template
# Metadata:

Parameters: 
    ec2ami:
      Description: 'latest amz ami id'
      Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
      Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
    azA:
      Type: AWS::EC2::AvailabilityZone::Name
      Default: eu-west-1a
    azB:
      Type: AWS::EC2::AvailabilityZone::Name
      Default: eu-west-1b
    stackName:
      Description: 'Stackname used to tag ressources' 
      Type: String
    productionTag:
      Description: 'Production Tag used to tag ressources' 
      Type: String
      Default: dev
    keyPair:
      Description: Keypair name
      Type: AWS::EC2::KeyPair::KeyName
      Default: 'MBP'


    
# Mappings: 

# Conditions: 

Resources: 

# NETWORKING
    VPC:
      Type: AWS::EC2::VPC
      Properties:
        CidrBlock: 10.0.0.0/16
        EnableDnsSupport: true
        Tags:
          - Key: Name
            Value: !Join ['-', [!Ref stackName, VPC]]
          - Key: Production
            Value: !Ref productionTag
    igw:
      Type: AWS::EC2::InternetGateway
      Properties:
        Tags:
          - Key: Name
            Value: !Join ['-', [!Ref stackName, IGW]]
          - Key: Production
            Value: !Ref productionTag
    AttachGateway:
      Type: AWS::EC2::VPCGatewayAttachment
      Properties:
        VpcId: !Ref VPC
        InternetGatewayId: !Ref igw

# ZONE A
    routeTableAZa:
      Type: AWS::EC2::RouteTable
      Properties:
        VpcId: !Ref VPC
        Tags:
          - Key: Name
            Value: !Join ['-', [!Ref stackName, TableAZa]]
          - Key: Production
            Value: !Ref productionTag

    defaultrouteAZa:
      Type: AWS::EC2::Route
      Properties:
        RouteTableId: !Ref routeTableAZa
        DestinationCidrBlock: 0.0.0.0/0
        GatewayId: !Ref igw

    routeTableAssocAZa:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        SubnetId: !Ref subAZa
        RouteTableId: !Ref routeTableAZa
    
    subAZa:
      Type: AWS::EC2::Subnet
      Properties:
        AvailabilityZone: !Ref azA
        # !Join
        #   - ''
        #   - - !Ref 'AWS::Region'
        #     - 'a'
        VpcId: !Ref VPC
        CidrBlock: 10.0.0.0/24
        MapPublicIpOnLaunch: true
        Tags:
          - Key: Name
            Value: !Join ['-', [!Ref stackName, sub-az-a]]
          - Key: Production
            Value: !Ref productionTag
    
 # ZONE B
    
    routeTableAZb:
      Type: AWS::EC2::RouteTable
      Properties:
        VpcId: !Ref VPC
        Tags:
          - Key: Name
            Value: !Join ['-', [!Ref stackName, TableAZb]]
          - Key: Production
            Value: !Ref productionTag

    defaultRouteAZb:
      Type: AWS::EC2::Route
      Properties:
        RouteTableId: !Ref routeTableAZb
        DestinationCidrBlock: 0.0.0.0/0
        GatewayId: !Ref igw

    routeTableAssocAZb:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        SubnetId: !Ref subAZb
        RouteTableId: !Ref routeTableAZb  
    
    subAZb:
      Type: AWS::EC2::Subnet
      Properties:
        AvailabilityZone: !Ref azB
        # !Join
        #   - ''
        #   - - !Ref 'AWS::Region'
        #     - 'a'
        VpcId: !Ref VPC
        CidrBlock: 10.0.1.0/24
        MapPublicIpOnLaunch: true
        Tags:
          - Key: Name
            Value: !Join ['-', [!Ref stackName, sub-az-b]]
          - Key: Production
            Value: !Ref productionTag
    
# SECURITY GROUPS
    sshSG:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupName: !Join ['-', [!Ref stackName,ssh-sg]]
        GroupDescription: !Join ['-', [!Ref stackName,ssh-sg]]
        VpcId: !Ref VPC
        SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: 22
            ToPort: 22
            CidrIp: 0.0.0.0/0
        Tags:
          - Key: Name
            Value: !Join ['-', [!Ref stackName, SG]]
          - Key: Production
            Value: !Ref productionTag
    webSG:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupName: !Join ['-', [!Ref stackName,web-sg]]
        GroupDescription: !Join ['-', [!Ref stackName,web-sg]]
        VpcId: !Ref VPC
        SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: 80
            ToPort: 80
            CidrIp: 0.0.0.0/0
        Tags:
          - Key: Name
            Value: !Join ['-', [!Ref stackName, SG]]
          - Key: Production
            Value: !Ref productionTag
    

# INSTANCES
    # InstanceAZa:
    #   Type: AWS::EC2::Instance
    #   Properties:
    #     AvailabilityZone: !Ref azA
    #     SubnetId: !Ref subAZa
    #     KeyName: !Ref keyPair
    #     DisableApiTermination: false
    #     ImageId: !Ref ec2ami
    #     InstanceType: 't2.micro'
    #     Monitoring: true
    #     SecurityGroupIds:
    #       - !Ref sshSG
    #     UserData: !Base64 |
    #       # DOES NOT WORK
    #       # !/bin/bash -ex
    #       # yum -y install htop 
    #     Tags:
    #       - Key: Name
    #         Value: !Join ['-', [!Ref stackName, instance-az-a]]
    #       - Key: Production
    #         Value: !Ref productionTag

    # InstanceAZb:
    #   Type: AWS::EC2::Instance
    #   Properties:
    #     AvailabilityZone: !Ref azB
    #     SubnetId: !Ref subAZb
    #     KeyName: !Ref keyPair
    #     DisableApiTermination: false
    #     ImageId: !Ref ec2ami
    #     InstanceType: 't2.micro'
    #     Monitoring: true
    #     SecurityGroupIds:
    #       - !Ref sshSG
    #     UserData: !Base64 |
    #       # DOES NOT WORK 
    #       # !/bin/bash -ex
    #       # yum -y install htop 
    #     Tags:
    #       - Key: Name
    #         Value: !Join ['-', [!Ref stackName, instance-az-b]]
    #       - Key: Production
    #         Value: !Ref productionTag

# # ELASTIC IPS
#     elasticIPA:
#       Type: AWS::EC2::EIP
#       Properties:
#         Domain: vpc
#         InstanceId: !Ref InstanceAZa
#     elasticIPB:
#       Type: AWS::EC2::EIP
#       Properties:
#         Domain: vpc
#         InstanceId: !Ref InstanceAZb




Outputs:
  VPC:
    Value: !Ref VPC
  StackName:
    Value: !Ref stackName
  

      # !Select 
      #   - 0
      #   - !GetAZs